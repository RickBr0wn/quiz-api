generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  isAdmin           Boolean @default(false)
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  isAdmin      Boolean  @default(false)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)
  token         String?   @unique
  credits       Int       @default(1000)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id        String     @id @default(cuid())
  name      String     @unique
  questions Question[]
}

model Answer {
  id         String    @id @default(cuid())
  text       String
  correct    Boolean
  questionId String?
  question   Question? @relation(fields: [questionId], references: [id])
}

model Question {
  id         String     @id @default(cuid())
  text       String     @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  answers    Answer[]
  categories Category[]
}
